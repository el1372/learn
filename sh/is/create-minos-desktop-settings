#!/bin/sh
#create default minos desktop settings
#usage: create-minos-default-desktop-setting

trap _cleanup 15 #trap ctrl-c
#trap _cleanup SIGINT SIGTERM #trap ctrl-c

progname="$(expr "${0}" : '.*/\([^/]*\)')"
file_header="This file is part of the minos-desktop-settings package"
total_errors="0"

_usage() {
    printf "%b\\n" "Usage: ${progname} [directory]"
    printf "%b\\n" "minos desktop settings creator."
    printf "\\n"
    printf "%s\\n" "  -h, --help   show this help message and exit"
}

_cmd() {
    [ -z "${1}" ] && return 0

    printf "%s " "[$] ${@}"
    printf "\\n"
    eval "${@}"

    _cmd__status="${?}"
    [ X"${_cmd__status}" != X"0" ] && exit "${_cmd__status}" || return
}

_cleanup() {
    stty echo
    printf "\\n"
    printf "%s\\n" "[+] cleanup ..."
    _cmd rm -rf "${target_directory}"

    [ -z ${1} ] && exit
}

_file_or_directory_exist() {
    [ -z "${1}" ] && return 1
    [ -f "${1}" ] && return 0
    [ -d "${1}" ] && return 0
    printf "\\n%s\\n" "WARNING: ${1} doesn't exists, skipping ..." >&2
    total_errors="$((total_errors + 1))"
    return 1
}

_create_minos_default_desktop_settings() {
    #$1 => target directory
    [ -z "${1}" ] && return 1

    [ -d "${1}" ] && _cmd rm -rf "${1}"
    _cmd mkdir -p "${1}"

    if _file_or_directory_exist ~/.minos/autostart; then
        echo
        _cmd "printf \"%s\\n\\n%s\\n\" \"#!/bin/sh\" \"#${file_header}\" > \"${1}\"/etc##minos##autostart"
        _cmd "tail -n+2 ~/.minos/autostart >> ${1}/etc##minos##autostart"
        _cmd "chmod +x ${1}/etc##minos##autostart"
        _cmd "sed -i '/#local$/d' ${1}/etc##minos##autostart"
    fi

    if _file_or_directory_exist ~/.minos/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##config"
        _cmd "cat ~/.minos/config >> ${1}/etc##minos##config"
        _cmd "sed -i '/HOME/d'       ${1}/etc##minos##config"
        _cmd "sed -i '/connman/d'    ${1}/etc##minos##config"
        #_cmd "sed -i '/^m-battery-config/d' ${1}/etc##minos##config"
        _cmd "sed -i '/^#m-battery-config/d' ${1}/etc##minos##config"
        _cmd "sed -i '/^#wallpaper/d'        ${1}/etc##minos##config"
        _cmd "sed -i '/^#lock-wallpaper/d'   ${1}/etc##minos##config"
        _cmd "sed -i 's:^wallpaper.*:wallpaper       /usr/share/minos/wallpapers/sunlight.png:'    ${1}/etc##minos##config"
        _cmd "sed -i 's:^lock-wallpaper.*:lock-wallpaper  /usr/share/minos/wallpapers/locked.png:' ${1}/etc##minos##config"
    fi

    if _file_or_directory_exist ~/.minos/help; then
        echo
        _cmd cp ~/.minos/help "${1}/etc##minos##help"
    fi

    if _file_or_directory_exist ~/.minos/session-manager; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##session-manager"
        _cmd "cat ~/.minos/session-manager            >>    ${1}/etc##minos##session-manager"
    fi

    if _file_or_directory_exist ~/.minos/statusbar; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##statusbar"
        _cmd "cat ~/.minos/statusbar                  >>    ${1}/etc##minos##statusbar"
        _cmd "sed -i 's:\$HOME/.data/images/icons/dzen2:/usr/share/minos/bitmaps:' ${1}/etc##minos##statusbar"
    fi

    if _file_or_directory_exist ~/.i3status.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##i3status.conf"
        _cmd "cat ~/.i3status.conf                    >>    ${1}/etc##i3status.conf"
    fi

    if _file_or_directory_exist ~/.local/share/applications/defaults.list; then
        echo
        _cmd cp ~/.local/share/applications/defaults.list "${1}/usr##share##applications##defaults.list"
    fi

    if _file_or_directory_exist ~/.local/share/applications/mimeapps.list; then
        echo
        _cmd cp ~/.local/share/applications/mimeapps.list "${1}/usr##share##applications##mimeapps.list"
        _cmd "sed -i 's:;userapp-.*::'  ${1}/usr##share##applications##mimeapps.list"
        _cmd "sed -i 's:=userapp-.*:=:' ${1}/usr##share##applications##mimeapps.list"
        _cmd "sed -i '/=$/d' ${1}/usr##share##applications##mimeapps.list"
    fi

    if _file_or_directory_exist ~/.Xdefaults; then
        echo
        _cmd "printf \"%s\\n\\n\" \"!${file_header}\" > \"${1}\"/etc##skel##.Xdefaults"
        _cmd "cat ~/.Xdefaults                        >>    ${1}/etc##skel##.Xdefaults"
    fi

    if _file_or_directory_exist ~/.xsession; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##skel##.xsession"
        _cmd "cat ~/.xsession                          >>    ${1}/etc##skel##.xsession"
    fi

    if _file_or_directory_exist ~/.config/libfm/libfm.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##xdg##libfm##libfm.conf"
        _cmd "cat ~/.config/libfm/libfm.conf          >>     ${1}/etc##xdg##libfm##libfm.conf"
    fi

    if _file_or_directory_exist ~/.config/pcmanfm/default/pcmanfm.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\"    > \"${1}\"/etc##xdg##pcmanfm##default##pcmanfm.conf"
        _cmd "cat ~/.config/pcmanfm/default/pcmanfm.conf >>     ${1}/etc##xdg##pcmanfm##default##pcmanfm.conf"
    fi

    if _file_or_directory_exist ~/.config/pcmanfm/main; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##xdg##pcmanfm##main"
        _cmd "cat ~/.config/pcmanfm/main               >>    ${1}/etc##xdg##pcmanfm##main"
    fi

    if _file_or_directory_exist ~/.gtkrc-2.0; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##skel##.gtkrc-2.0"
        _cmd "cat ~/.gtkrc-2.0                         >>    ${1}/etc##skel##.gtkrc-2.0"
        _cmd "sed -i 's:^include.*:include \"/home/muser/.gtkrc-2.0.mine\":' ${1}/etc##skel##.gtkrc-2.0"
    fi

    if _file_or_directory_exist ~/.config/gtk-3.0/settings.ini; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##skel##.config##gtk-3.0##settings.ini"
        _cmd "cat ~/.config/gtk-3.0/settings.ini       >>    ${1}/etc##skel##.config##gtk-3.0##settings.ini"
    fi

    if _file_or_directory_exist ~/.config/Trolltech.conf; then
        echo
        _cmd cp -r ~/.config/Trolltech.conf "${1}/etc##xdg##Trolltech.conf"
    fi

    if _file_or_directory_exist ~/.config/redshift.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##skel##.config##redshift.conf"
        _cmd "cat ~/.config/redshift.conf             >>    ${1}/etc##skel##.config##redshift.conf"
    fi

    if _file_or_directory_exist ~/.config/user-dirs.dirs; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##skel##.config##user-dirs.dirs"
        _cmd "cat ~/.config/user-dirs.dirs             >>    ${1}/etc##skel##.config##user-dirs.dirs"
    fi

    if _file_or_directory_exist ~/.config/user-dirs.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##xdg##user-dirs.conf"
        _cmd "cat ~/.config/user-dirs.conf             >>    ${1}/etc##xdg##user-dirs.conf"
    fi

    if _file_or_directory_exist ~/.i3/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##i3##config"
        _cmd "cat ~/.i3/config >> ${1}/etc##i3##config"
        _cmd "sed -i 's:dmenu-alarm.*:dmenu-alarm:' ${1}/etc##i3##config"
    fi

    if _file_or_directory_exist ~/.irssi/; then
        echo
        _cmd cp -r ~/.irssi/ "${1}/etc##skel##.irssi"
        _cmd rm -rf "${1}/etc##skel##.irssi"/*gpg
        _cmd rm -rf "${1}/etc##skel##.irssi"/*.log
        _cmd rm -rf "${1}/etc##skel##.irssi"/autobleh*
    fi

    if _file_or_directory_exist ~/.mplayer/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##mplayer##mplayer.conf"
        _cmd "cat ~/.mplayer/config                   >>    ${1}/etc##mplayer##mplayer.conf"
    fi

    if _file_or_directory_exist ~/.mpd.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"# ${file_header}\" > \"${1}\"/etc##mpd.conf"
        _cmd "cat ~/.mpd.conf                          >>    ${1}/etc##mpd.conf"
        _cmd "sed -i 's:^music_directory.*:music_directory \"/var/lib/mpd/music\":' ${1}/etc##mpd.conf"
    fi

    if _file_or_directory_exist ~/.mutt/muttrc; then
        echo
        _cmd mkdir "${1}/etc##skel##.mutt"
        _cmd cp -r ~/.mutt/accounts "${1}/etc##skel##.mutt"
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##skel##.mutt/muttrc"
        _cmd "cat ~/.mutt/muttrc                      >>    ${1}/etc##skel##.mutt/muttrc"
        _cmd rm -rf "${1}/etc##skel##.mutt/cache"
        _cmd rm -rf "${1}/etc##skel##.mutt/certificates"
        _cmd mv     "${1}/etc##skel##.mutt/accounts/"f* "${1}/etc##skel##.mutt/accounts/1st_account@domain.tld"
        _cmd mv     "${1}/etc##skel##.mutt/accounts/"c* "${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld"
        _cmd rm -rf "${1}/etc##skel##.mutt/accounts/"*@*.com
        _cmd "sed -i 's:alternates.*:alternates \"alt_1@domain.tld|alt_2@domain.tld\":' ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:set from.*:set from             = \"Joe Foobar <1st_account@domain.tld>\":' ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:fc.*@.*mail.com:1st_account@domain.tld:'   ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*:,imap.domain.tld:,'               ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*/\[,imap.domain.tld/\[,'           ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,smtp:.*:,smtp://1st_account@smtp.domain.ltd:,' ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,my_.*,my_1st_accountATdomainDOTltd,'       ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i '/^set status_format/d'                       ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:^#set status_format:set status_format:'    ${1}/etc##skel##.mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,index 2,index 1,'                          ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's,index 3,index 2,'                          ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's,set pgp_sign_as.*,#set pgp_sign_as             = 0xFFFFFF,' ${1}/etc##skel##.mutt/muttrc"

        _cmd "sed -i 's:set from.*:set from             = \"Joe Foobar <2nd_account@domain.tld>\":' ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's:chi.*@.*mail.com:2nd_account@domain.tld:'  ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*:,imap.domain.tld:,'               ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*/\[,imap.domain.tld/\[,'           ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,smtp:.*:,smtp://2nd_account@smtp.domain.ltd:,' ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,my_.*,my_2nd_accountATdomainDOTltd,'       ${1}/etc##skel##.mutt/accounts/2nd_account@domain.tld/account"

        _cmd "sed -i 's,my_fc.*=,my_1st_accountATdomainDOTltd=,'   ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's,my_chi.*=,my_2nd_accountATdomainDOTltd=,'  ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's:fc.*@.*mail.com:1st_account@domain.tld:'   ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's:chi.*@.*mail.com:2nd_account@domain.tld:'  ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i 's:^source.*:source ~/.mutt/accounts/1st_account@domain.tld/account:' ${1}/etc##skel##.mutt/muttrc"
        _cmd "sed -i '/javier/d'                                   ${1}/etc##skel##.mutt/muttrc"
        _cmd "printf \"%s\\n%s\" \"1st_account@domain.tld: passwd\" \"2nd_account@domain.tld: passwd\" > \"${1}\"/etc##skel##.mutt/accounts/passwd.gpg"
    fi

    if _file_or_directory_exist ~/.ncmpcpp/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##skel##.ncmpcpp##config"
        _cmd "cat ~/.ncmpcpp/config                   >>    ${1}/etc##skel##.ncmpcpp##config"
    fi

    for urxvt_script in ~/.urxvt/*; do
        case "${urxvt_script}" in
            *urxvtd*) continue ;;
        esac

        if _file_or_directory_exist "${urxvt_script}"; then
            echo
            _cmd cp -r "${urxvt_script}" "${1}/usr##lib##urxvt##perl##$(basename "${urxvt_script}")"
        fi
    done

    if _file_or_directory_exist ~/.compton.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##xdg##compton.conf"
        _cmd "cat ~/.compton.conf                     >>    ${1}/etc##xdg##compton.conf"
    fi

    if _file_or_directory_exist ~/.slim.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##slim.conf"
        _cmd "cat ~/.slim.conf                        >>    ${1}/etc##slim.conf"
        _cmd "sed -i 's:^default_user.*:default_user        muser:g' ${1}/etc##slim.conf"
    fi

    echo
    echo  "${1}/usr##share##debconf##confmodule"
    cat > "${1}/usr##share##debconf##confmodule" << E=O=F
#!/bin/sh
#
#${file_header}
#
#While abusing apt some maintainer postinst scripts fail to
#run debconf due to missing file descriptors, eg:
#https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=439763
#http://help-cfengine.narkive.com/foRdaZbB/shellcommands-3-bad-file-descriptor
#https://bugs.launchpad.net/ubuntu/+source/cloud-init/+bug/961142

#replace db_* functions as a nasty workaround
db_capb ()               { return 0; }
db_set ()                { return 0; }
db_reset ()              { return 0; }
db_title ()              { return 0; }
db_input ()              { return 0; }
db_beginblock ()         { return 0; }
db_endblock ()           { return 0; }
db_go ()                 { return 0; }
db_get ()                { return 0; }
db_register ()           { return 0; }
db_unregister ()         { return 0; }
db_subst ()              { return 0; }
db_fset ()               { return 0; }
db_fget ()               { return 0; }
db_purge ()              { return 0; }
db_metaget ()            { return 0; }
db_version ()            { return 0; }
db_clear ()              { return 0; }
db_settitle ()           { return 0; }
db_previous_module ()    { return 0; }
db_info ()               { return 0; }
db_progress ()           { return 0; }
db_data ()               { return 0; }
db_x_loadtemplatefile () { return 0; }
db_text ()               { return 0; }
db_stop ()               { return 0; }
E=O=F

    echo
    echo  "${1}/etc##polkit-1##localauthority##50-local.d##org.freedesktop.consolekit.pkla"
    cat > "${1}/etc##polkit-1##localauthority##50-local.d##org.freedesktop.consolekit.pkla" << E=O=F
#${file_header}

[Restart]
Identity=unix-group:sudo
Action=org.freedesktop.consolekit.system.restart
ResultAny=yes
ResultInactive=yes
ResultActive=yes

[Shutdown]
Identity=unix-group:sudo
Action=org.freedesktop.consolekit.system.stop
ResultAny=yes
ResultInactive=yes
ResultActive=yes
E=O=F

    echo
    echo  "${1}/etc##systemd##logind.conf"
    cat>> "${1}/etc##systemd##logind.conf" << E=O=F
# ${file_header}
#
# Defaults can be restored by deleting this file.
#
# See logind.conf(5) for details.

[Login]
#NAutoVTs=6
#ReserveVT=6
#KillUserProcesses=no
#KillOnlyUsers=
#KillExcludeUsers=root
#InhibitDelayMaxSec=5
#HandlePowerKey=poweroff
#HandleSuspendKey=suspend
#HandleHibernateKey=hibernate
#HandleLidSwitch=suspend
HandleLidSwitch=ignore
#HandleLidSwitchDocked=ignore
#PowerKeyIgnoreInhibited=no
#SuspendKeyIgnoreInhibited=no
#HibernateKeyIgnoreInhibited=no
#LidSwitchIgnoreInhibited=yes
#HoldoffTimeoutSec=30s
#IdleAction=ignore
#IdleActionSec=30min
#RuntimeDirectorySize=10%
#RemoveIPC=yes
#UserTasksMax=12288
E=O=F

    echo
    echo  "${1}/etc##X11##Xsession.d##05minos-noerrfile"
    cat > "${1}/etc##X11##Xsession.d##05minos-noerrfile" << E=O=F
# ${file_header}
#
E=O=F
    cat>> "${1}/etc##X11##Xsession.d##05minos-noerrfile" << 'E=O=F'
# This is a -*- shell-script -*- fragment called by /etc/X11/Xsession

# Redirect all errors to /dev/null instead of $ERRFILE
# (~/.xsession-errors by default), to avoid filling up users home
# directory with error messages.  Allow the user to disable this by
# creating ~/.xsession-errors-enable

if [ ! -f "$HOME/.xsession-errors-enable" ] ; then
  grep -ri "xsession-errors-enable" /etc/X11/Xsession.d/ 2>/dev/null | \
      grep -v 05minos-noerrfile >/dev/null 2>&1 && exit
  # Report the change to the log file before switching
  echo "info: Redirecting xsession messages to /dev/null."
  echo "info: touch '$HOME/.xsession-errors-enable' to disable this."
  exec >> /dev/null 2>&1
fi
E=O=F

    echo
    echo  "${1}/etc##polkit-1##localauthority##50-local.d##55-storage.pkla"
    cat>> "${1}/etc##polkit-1##localauthority##50-local.d##55-storage.pkla" << E=O=F
#${file_header}

[Storage Permissions]
Identity=unix-group:plugdev
Action=org.freedesktop.udisks.filesystem-mount;org.freedesktop.udisks.drive-eject;org.freedesktop.udisks.drive-detach;org.freedesktop.udisks.luks-unlock;org.freedesktop.udisks.inhibit-polling;org.freedesktop.udisks.drive-set-spindown
ResultAny=yes
ResultActive=yes
ResultInactive=no
E=O=F

    _cmd "find ${1} -type f -exec sed -i '/local_changes$/d' {} +"

    printf "\\n%s\\n" "[+] New minos desktop settings generated at: ${1}/"

    [ "${total_errors}" -gt "0" ] && printf "%s\\n" "[-] "${total_errors}" errors were found, see above to find more details" && return 1 || :

    echo
    echo  "${1}/README.md"
    cat > "${1}/README.md" << 'E=O=F'
## About

This repository contain the settings that give to minos its identify, it targets desktop environments, some of the changes are:

- Skel default files:
 - `.Xdefault`: default theme and urxvt options
 - `.xsession`: i3 session
 - `.config/redshift.conf`: redshift template
 - `.config/Trolltech.conf`: default qt theme
 - `.gtkrc-2.0`: default gtk theme
 - `.config/user-dirs.dirs`: stop autocreation of ~/Video, ~/Audio, etc folders

- Application settings:
 - `git`: default theme plus aliases
 - `i3`: default theme, shortcuts, statusbar, etc
 - `compton`: performance oriented settings
 - `mplayer`: fifo controller
 - `ncmpcpp`: default theme
 - `pcmanfm`: default settings
 - `irssi`: default theme
 - `mutt`: multiple account email settings template
 - `urxvt`: common plugins and default theme
 - `minos`: autostart/statusbar/help settings

## Quick start

### On Ubuntu (only LTS releases)

1. Set up the minos archive:

   ```
   $ sudo add-apt-repository ppa:minos-archive/main
   ```

2. Install:

   ```
   $ sudo apt-get update && sudo apt-get install minos-desktop-settings
   ```

3. Enjoy ☺!

## Feedback

Please drop me an [email](mailto:m@javier.io) with your suggestions or open [an issue](https://github.com/minos-org/minos-desktop-settings/issues) with your comments.
E=O=F
}

for arg; do #parse options
    case "${arg}" in
        -h|--help) _usage && exit ;;
        -*) printf "%s\\n" "${progname}: unrecognized option '${arg}'" >&2
            _usage >&2; exit 1 ;;
        *) target_directory="${arg}"
    esac
done; target_directory="${target_directory:-minos-desktop-settings}"

_create_minos_default_desktop_settings "${target_directory}"
